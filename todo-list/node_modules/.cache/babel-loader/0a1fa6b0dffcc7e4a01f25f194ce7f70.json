{"ast":null,"code":"var _jsxFileName = \"/Users/alya_usual/Documents/ClonedTODO/todo-list/src/App.js\";\nimport React from \"react\";\nimport TodoElement from \"./components/TodoElement\";\nimport Input from \"./components/Input\";\nimport { SimpleButton } from \"./components/SimpleButton\";\nimport ReadOnlyField from \"./components/ReadOnlyField\";\nimport { Box, ButtonGroup } from \"@mui/material\";\n\nfunction App() {\n  const [inputText, setInputText] = useState(\"\");\n  const [tasks, setTasks] = useState([]);\n  const [status, setStatus] = useState(\"all\");\n  const [filteredTasks, setFilteredTasks] = useState([]);\n\n  const filteredHandler = () => {\n    switch (status) {\n      case \"completed\":\n        setFilteredTasks(tasks.filter(task => task.completed === true));\n        break;\n\n      case \"active\":\n        setFilteredTasks(tasks.filter(task => task.completed === false));\n        break;\n\n      default:\n        setFilteredTasks(tasks);\n        break;\n    }\n  };\n\n  useEffect(() => {\n    getLocalTasks();\n  }, []);\n  useEffect(() => {\n    filteredHandler();\n    savetoLocalStorage();\n  }, [tasks, status]);\n\n  const addValueToTheList = e => {\n    e.preventDefault();\n\n    if (inputText.length > 0) {\n      setTasks([...tasks, {\n        text: inputText,\n        completed: false,\n        id: uuidv4()\n      }]);\n      setInputText(\"\");\n    }\n  };\n\n  const deleteHandler = i => {\n    setTasks(tasks.filter(item => item.id !== i.id));\n  };\n\n  const completeHandler = i => {\n    setTasks(tasks.map(item => item.id === i.id ? { ...item,\n      completed: !item.completed\n    } : item));\n  };\n\n  const statusHandler = e => {\n    setStatus(e.target.innerText.toLowerCase());\n  };\n\n  const savetoLocalStorage = () => {\n    localStorage.setItem(\"tasks\", JSON.stringify(tasks));\n    localStorage.setItem(\"button\", status);\n  };\n\n  const getLocalTasks = () => {\n    if (localStorage.getItem(\"tasks\") === null && localStorage.getItem(\"button\" === null)) {\n      localStorage.setItem(\"tasks\", []);\n      localStorage.setItem(\"button\", \"\");\n    } else {\n      let itemList = JSON.parse(localStorage.getItem(\"tasks\"));\n      setTasks(itemList);\n      setStatus(localStorage.getItem(\"button\"));\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(TodoElement, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Box, {\n    component: \"form\",\n    sx: {\n      display: \"flex\",\n      flexDirection: \"column\",\n      alignItems: \"center\",\n      \"& > *\": {\n        m: 1\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ReadOnlyField, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(ButtonGroup, {\n    color: \"secondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(SimpleButton, {\n    text: \"All\",\n    onClick: statusHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(SimpleButton, {\n    text: \"Active\",\n    onClick: statusHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(SimpleButton, {\n    text: \"Completed\",\n    onClick: statusHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 11\n    }\n  }))));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/alya_usual/Documents/ClonedTODO/todo-list/src/App.js"],"names":["React","TodoElement","Input","SimpleButton","ReadOnlyField","Box","ButtonGroup","App","inputText","setInputText","useState","tasks","setTasks","status","setStatus","filteredTasks","setFilteredTasks","filteredHandler","filter","task","completed","useEffect","getLocalTasks","savetoLocalStorage","addValueToTheList","e","preventDefault","length","text","id","uuidv4","deleteHandler","i","item","completeHandler","map","statusHandler","target","innerText","toLowerCase","localStorage","setItem","JSON","stringify","getItem","itemList","parse","display","flexDirection","alignItems","m"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport TodoElement from \"./components/TodoElement\";\nimport Input from \"./components/Input\";\nimport { SimpleButton } from \"./components/SimpleButton\";\nimport ReadOnlyField from \"./components/ReadOnlyField\";\n\nimport { Box, ButtonGroup } from \"@mui/material\";\nfunction App() {\n  const [inputText, setInputText] = useState(\"\");\n  const [tasks, setTasks] = useState([]);\n  const [status, setStatus] = useState(\"all\");\n  const [filteredTasks, setFilteredTasks] = useState([]);\n\n  const filteredHandler = () => {\n    switch (status) {\n      case \"completed\":\n        setFilteredTasks(tasks.filter((task) => task.completed === true));\n        break;\n      case \"active\":\n        setFilteredTasks(tasks.filter((task) => task.completed === false));\n        break;\n      default:\n        setFilteredTasks(tasks);\n        break;\n    }\n  };\n  useEffect(() => {\n    getLocalTasks();\n  }, []);\n\n  useEffect(() => {\n    filteredHandler();\n    savetoLocalStorage();\n  }, [tasks, status]);\n\n  const addValueToTheList = (e) => {\n    e.preventDefault();\n    if (inputText.length > 0) {\n      setTasks([...tasks, { text: inputText, completed: false, id: uuidv4() }]);\n      setInputText(\"\");\n    }\n  };\n\n  const deleteHandler = (i) => {\n    setTasks(tasks.filter((item) => item.id !== i.id));\n  };\n\n  const completeHandler = (i) => {\n    setTasks(\n      tasks.map((item) =>\n        item.id === i.id ? { ...item, completed: !item.completed } : item\n      )\n    );\n  };\n\n  const statusHandler = (e) => {\n    setStatus(e.target.innerText.toLowerCase());\n  };\n\n  const savetoLocalStorage = () => {\n    localStorage.setItem(\"tasks\", JSON.stringify(tasks));\n    localStorage.setItem(\"button\", status);\n  };\n\n  const getLocalTasks = () => {\n    if (\n      localStorage.getItem(\"tasks\") === null &&\n      localStorage.getItem(\"button\" === null)\n    ) {\n      localStorage.setItem(\"tasks\", []);\n      localStorage.setItem(\"button\", \"\");\n    } else {\n      let itemList = JSON.parse(localStorage.getItem(\"tasks\"));\n      setTasks(itemList);\n      setStatus(localStorage.getItem(\"button\"));\n    }\n  };\n\n  return (\n    <div className='container'>\n      <Input />\n      <TodoElement />\n      <Box\n        component='form'\n        sx={{\n          display: \"flex\",\n          flexDirection: \"column\",\n          alignItems: \"center\",\n          \"& > *\": {\n            m: 1,\n          },\n        }}\n      >\n        <ReadOnlyField />\n        <ButtonGroup color='secondary'>\n          <SimpleButton text='All' onClick={statusHandler} />\n          <SimpleButton text='Active' onClick={statusHandler} />\n          <SimpleButton text='Completed' onClick={statusHandler} />\n        </ButtonGroup>\n      </Box>\n    </div>\n  );\n}\nexport default App;\n"]},"metadata":{},"sourceType":"module"}