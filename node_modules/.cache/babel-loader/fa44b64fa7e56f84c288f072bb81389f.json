{"ast":null,"code":"var _jsxFileName = \"/Users/alya_usual/Documents/ClonedTODO/todo-list/src/components/TodoElement.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { SimpleButton } from \"./SimpleButton\";\nimport { Box, List, IconButton, TextField, ListItem, ListItemText, ButtonGroup } from \"@mui/material\";\nimport CheckIcon from \"@mui/icons-material/Check\";\nimport DeleteIcon from \"@mui/icons-material/Delete\";\nimport \"../index.css\";\n\nconst TodoElement = () => {\n  const [inputText, setInputText] = useState(\"\");\n  const [tasks, setTasks] = useState([]);\n  const [status, setStatus] = useState(\"all\");\n  const [filteredTasks, setFilteredTasks] = useState([]);\n\n  const filteredHandler = () => {\n    switch (status) {\n      case \"completed\":\n        setFilteredTasks(tasks.filter(task => task.completed === true));\n        break;\n\n      case \"active\":\n        setFilteredTasks(tasks.filter(task => task.completed === false));\n        break;\n\n      default:\n        setFilteredTasks(tasks);\n        break;\n    }\n  };\n\n  useEffect(() => {\n    getLocalTasks();\n  }, []);\n  useEffect(() => {\n    filteredHandler();\n    savetoLocalStorage();\n  }, [tasks, status]);\n\n  const addValueToTheList = e => {\n    e.preventDefault();\n\n    if (inputText.length > 0) {\n      setTasks([...tasks, {\n        text: inputText,\n        completed: false,\n        id: uuidv4()\n      }]);\n      setInputText(\"\");\n    }\n  };\n\n  const deleteHandler = i => {\n    setTasks(tasks.filter(item => item.id !== i.id));\n  };\n\n  const completeHandler = i => {\n    setTasks(tasks.map(item => item.id === i.id ? { ...item,\n      completed: !item.completed\n    } : item));\n  };\n\n  const statusHandler = e => {\n    setStatus(e.target.innerText.toLowerCase());\n  };\n\n  const savetoLocalStorage = () => {\n    localStorage.setItem(\"tasks\", JSON.stringify(tasks));\n  };\n\n  const getLocalTasks = () => {\n    if (localStorage.getItem(\"tasks\") === null) {\n      localStorage.setItem(\"tasks\", JSON.stringify([]));\n    } else {\n      let itemList = JSON.parse(localStorage.getItem(\"tasks\"));\n      setTasks(itemList);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: addValueToTheList,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    autoFocus: true,\n    fullWidth: true,\n    placeholder: \"Put your task here\",\n    onChange: e => setInputText(e.target.value),\n    value: inputText,\n    onClick: addValueToTheList,\n    color: \"secondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Box, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(List, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }\n  }, filteredTasks.map(i => /*#__PURE__*/React.createElement(ListItem, {\n    key: i.id,\n    className: `list-item${i.completed ? \"-completed\" : \"\"}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(ListItemText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 15\n    }\n  }, i.text), /*#__PURE__*/React.createElement(IconButton, {\n    onClick: () => completeHandler(i),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(CheckIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(IconButton, {\n    onClick: () => deleteHandler(i),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(DeleteIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 17\n    }\n  })))))), /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(TextField, {\n    type: \"number\",\n    value: filteredTasks.length,\n    inputProps: {\n      readOnly: true\n    },\n    color: \"secondary\",\n    size: \"small\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Box, {\n    component: \"form\",\n    sx: {\n      display: \"flex\",\n      flexDirection: \"column\",\n      alignItems: \"center\",\n      \"& > *\": {\n        m: 1\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ButtonGroup, {\n    color: \"secondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(SimpleButton, {\n    text: \"All\",\n    onClick: statusHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(SimpleButton, {\n    text: \"Active\",\n    onClick: statusHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(SimpleButton, {\n    text: \"Completed\",\n    onClick: statusHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 11\n    }\n  }))));\n};\n\nexport default TodoElement;","map":{"version":3,"sources":["/Users/alya_usual/Documents/ClonedTODO/todo-list/src/components/TodoElement.js"],"names":["React","useState","useEffect","v4","uuidv4","SimpleButton","Box","List","IconButton","TextField","ListItem","ListItemText","ButtonGroup","CheckIcon","DeleteIcon","TodoElement","inputText","setInputText","tasks","setTasks","status","setStatus","filteredTasks","setFilteredTasks","filteredHandler","filter","task","completed","getLocalTasks","savetoLocalStorage","addValueToTheList","e","preventDefault","length","text","id","deleteHandler","i","item","completeHandler","map","statusHandler","target","innerText","toLowerCase","localStorage","setItem","JSON","stringify","getItem","itemList","parse","value","readOnly","display","flexDirection","alignItems","m"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,EAAE,IAAIC,MAAf,QAA6B,MAA7B;AACA,SAASC,YAAT,QAA6B,gBAA7B;AAEA,SACEC,GADF,EAEEC,IAFF,EAGEC,UAHF,EAIEC,SAJF,EAKEC,QALF,EAMEC,YANF,EAOEC,WAPF,QAQO,eARP;AASA,OAAOC,SAAP,MAAsB,2BAAtB;AACA,OAAOC,UAAP,MAAuB,4BAAvB;AAEA,OAAO,cAAP;;AAEA,MAAMC,WAAW,GAAG,MAAM;AACxB,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BhB,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACiB,KAAD,EAAQC,QAAR,IAAoBlB,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACmB,MAAD,EAASC,SAAT,IAAsBpB,QAAQ,CAAC,KAAD,CAApC;AACA,QAAM,CAACqB,aAAD,EAAgBC,gBAAhB,IAAoCtB,QAAQ,CAAC,EAAD,CAAlD;;AAEA,QAAMuB,eAAe,GAAG,MAAM;AAC5B,YAAQJ,MAAR;AACE,WAAK,WAAL;AACEG,QAAAA,gBAAgB,CAACL,KAAK,CAACO,MAAN,CAAcC,IAAD,IAAUA,IAAI,CAACC,SAAL,KAAmB,IAA1C,CAAD,CAAhB;AACA;;AACF,WAAK,QAAL;AACEJ,QAAAA,gBAAgB,CAACL,KAAK,CAACO,MAAN,CAAcC,IAAD,IAAUA,IAAI,CAACC,SAAL,KAAmB,KAA1C,CAAD,CAAhB;AACA;;AACF;AACEJ,QAAAA,gBAAgB,CAACL,KAAD,CAAhB;AACA;AATJ;AAWD,GAZD;;AAaAhB,EAAAA,SAAS,CAAC,MAAM;AACd0B,IAAAA,aAAa;AACd,GAFQ,EAEN,EAFM,CAAT;AAIA1B,EAAAA,SAAS,CAAC,MAAM;AACdsB,IAAAA,eAAe;AACfK,IAAAA,kBAAkB;AACnB,GAHQ,EAGN,CAACX,KAAD,EAAQE,MAAR,CAHM,CAAT;;AAKA,QAAMU,iBAAiB,GAAIC,CAAD,IAAO;AAC/BA,IAAAA,CAAC,CAACC,cAAF;;AACA,QAAIhB,SAAS,CAACiB,MAAV,GAAmB,CAAvB,EAA0B;AACxBd,MAAAA,QAAQ,CAAC,CAAC,GAAGD,KAAJ,EAAW;AAAEgB,QAAAA,IAAI,EAAElB,SAAR;AAAmBW,QAAAA,SAAS,EAAE,KAA9B;AAAqCQ,QAAAA,EAAE,EAAE/B,MAAM;AAA/C,OAAX,CAAD,CAAR;AACAa,MAAAA,YAAY,CAAC,EAAD,CAAZ;AACD;AACF,GAND;;AAQA,QAAMmB,aAAa,GAAIC,CAAD,IAAO;AAC3BlB,IAAAA,QAAQ,CAACD,KAAK,CAACO,MAAN,CAAca,IAAD,IAAUA,IAAI,CAACH,EAAL,KAAYE,CAAC,CAACF,EAArC,CAAD,CAAR;AACD,GAFD;;AAIA,QAAMI,eAAe,GAAIF,CAAD,IAAO;AAC7BlB,IAAAA,QAAQ,CACND,KAAK,CAACsB,GAAN,CAAWF,IAAD,IACRA,IAAI,CAACH,EAAL,KAAYE,CAAC,CAACF,EAAd,GAAmB,EAAE,GAAGG,IAAL;AAAWX,MAAAA,SAAS,EAAE,CAACW,IAAI,CAACX;AAA5B,KAAnB,GAA6DW,IAD/D,CADM,CAAR;AAKD,GAND;;AAQA,QAAMG,aAAa,GAAIV,CAAD,IAAO;AAC3BV,IAAAA,SAAS,CAACU,CAAC,CAACW,MAAF,CAASC,SAAT,CAAmBC,WAAnB,EAAD,CAAT;AACD,GAFD;;AAIA,QAAMf,kBAAkB,GAAG,MAAM;AAC/BgB,IAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BC,IAAI,CAACC,SAAL,CAAe9B,KAAf,CAA9B;AACD,GAFD;;AAIA,QAAMU,aAAa,GAAG,MAAM;AAC1B,QAAIiB,YAAY,CAACI,OAAb,CAAqB,OAArB,MAAkC,IAAtC,EAA4C;AAC1CJ,MAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BC,IAAI,CAACC,SAAL,CAAe,EAAf,CAA9B;AACD,KAFD,MAEO;AACL,UAAIE,QAAQ,GAAGH,IAAI,CAACI,KAAL,CAAWN,YAAY,CAACI,OAAb,CAAqB,OAArB,CAAX,CAAf;AACA9B,MAAAA,QAAQ,CAAC+B,QAAD,CAAR;AACD;AACF,GAPD;;AASA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAM,IAAA,QAAQ,EAAEpB,iBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,SAAD;AACE,IAAA,SAAS,MADX;AAEE,IAAA,SAAS,MAFX;AAGE,IAAA,WAAW,EAAC,oBAHd;AAIE,IAAA,QAAQ,EAAGC,CAAD,IAAOd,YAAY,CAACc,CAAC,CAACW,MAAF,CAASU,KAAV,CAJ/B;AAKE,IAAA,KAAK,EAAEpC,SALT;AAME,IAAA,OAAO,EAAEc,iBANX;AAOE,IAAA,KAAK,EAAC,WAPR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,eAYE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGR,aAAa,CAACkB,GAAd,CAAmBH,CAAD,iBACjB,oBAAC,QAAD;AACE,IAAA,GAAG,EAAEA,CAAC,CAACF,EADT;AAEE,IAAA,SAAS,EAAG,YAAWE,CAAC,CAACV,SAAF,GAAc,YAAd,GAA6B,EAAG,EAFzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAIE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAeU,CAAC,CAACH,IAAjB,CAJF,eAKE,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAE,MAAMK,eAAe,CAACF,CAAD,CAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CALF,eAQE,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAE,MAAMD,aAAa,CAACC,CAAD,CAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CARF,CADD,CADH,CADF,CAZF,eA8BE,uDACE,oBAAC,SAAD;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,KAAK,EAAEf,aAAa,CAACW,MAFvB;AAGE,IAAA,UAAU,EAAE;AAAEoB,MAAAA,QAAQ,EAAE;AAAZ,KAHd;AAIE,IAAA,KAAK,EAAC,WAJR;AAKE,IAAA,IAAI,EAAC,OALP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CA9BF,eAuCE,oBAAC,GAAD;AACA,IAAA,SAAS,EAAC,MADV;AAEE,IAAA,EAAE,EAAE;AACFC,MAAAA,OAAO,EAAE,MADP;AAEFC,MAAAA,aAAa,EAAE,QAFb;AAGFC,MAAAA,UAAU,EAAE,QAHV;AAIF,eAAS;AACPC,QAAAA,CAAC,EAAE;AADI;AAJP,KAFN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAWE,oBAAC,WAAD;AAAa,IAAA,KAAK,EAAC,WAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,YAAD;AAAc,IAAA,IAAI,EAAC,KAAnB;AAAyB,IAAA,OAAO,EAAEhB,aAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE,oBAAC,YAAD;AAAc,IAAA,IAAI,EAAC,QAAnB;AAA4B,IAAA,OAAO,EAAEA,aAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,eAGE,oBAAC,YAAD;AAAc,IAAA,IAAI,EAAC,WAAnB;AAA+B,IAAA,OAAO,EAAEA,aAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,CAXF,CAvCF,CADF;AA2DD,CA5HD;;AA8HA,eAAe1B,WAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { SimpleButton } from \"./SimpleButton\";\n\nimport {\n  Box,\n  List,\n  IconButton,\n  TextField,\n  ListItem,\n  ListItemText,\n  ButtonGroup,\n} from \"@mui/material\";\nimport CheckIcon from \"@mui/icons-material/Check\";\nimport DeleteIcon from \"@mui/icons-material/Delete\";\n\nimport \"../index.css\";\n\nconst TodoElement = () => {\n  const [inputText, setInputText] = useState(\"\");\n  const [tasks, setTasks] = useState([]);\n  const [status, setStatus] = useState(\"all\");\n  const [filteredTasks, setFilteredTasks] = useState([]);\n\n  const filteredHandler = () => {\n    switch (status) {\n      case \"completed\":\n        setFilteredTasks(tasks.filter((task) => task.completed === true));\n        break;\n      case \"active\":\n        setFilteredTasks(tasks.filter((task) => task.completed === false));\n        break;\n      default:\n        setFilteredTasks(tasks);\n        break;\n    }\n  };\n  useEffect(() => {\n    getLocalTasks();\n  }, []);\n\n  useEffect(() => {\n    filteredHandler();\n    savetoLocalStorage();\n  }, [tasks, status]);\n\n  const addValueToTheList = (e) => {\n    e.preventDefault();\n    if (inputText.length > 0) {\n      setTasks([...tasks, { text: inputText, completed: false, id: uuidv4() }]);\n      setInputText(\"\");\n    }\n  };\n\n  const deleteHandler = (i) => {\n    setTasks(tasks.filter((item) => item.id !== i.id));\n  };\n\n  const completeHandler = (i) => {\n    setTasks(\n      tasks.map((item) =>\n        item.id === i.id ? { ...item, completed: !item.completed } : item\n      )\n    );\n  };\n\n  const statusHandler = (e) => {\n    setStatus(e.target.innerText.toLowerCase());\n  };\n\n  const savetoLocalStorage = () => {\n    localStorage.setItem(\"tasks\", JSON.stringify(tasks));\n  };\n\n  const getLocalTasks = () => {\n    if (localStorage.getItem(\"tasks\") === null) {\n      localStorage.setItem(\"tasks\", JSON.stringify([]));\n    } else {\n      let itemList = JSON.parse(localStorage.getItem(\"tasks\"));\n      setTasks(itemList);\n    }\n  };\n\n  return (\n    <div>\n      <form onSubmit={addValueToTheList}>\n        <TextField\n          autoFocus\n          fullWidth\n          placeholder='Put your task here'\n          onChange={(e) => setInputText(e.target.value)}\n          value={inputText}\n          onClick={addValueToTheList}\n          color='secondary'\n        />\n      </form>\n      <Box>\n        <List>\n          {filteredTasks.map((i) => (\n            <ListItem\n              key={i.id}\n              className={`list-item${i.completed ? \"-completed\" : \"\"}`}\n            >\n              <ListItemText>{i.text}</ListItemText>\n              <IconButton onClick={() => completeHandler(i)}>\n                <CheckIcon />\n              </IconButton>\n              <IconButton onClick={() => deleteHandler(i)}>\n                <DeleteIcon />\n              </IconButton>\n            </ListItem>\n          ))}\n        </List>\n      </Box>\n      <>\n        <TextField\n          type='number'\n          value={filteredTasks.length}\n          inputProps={{ readOnly: true }}\n          color='secondary'\n          size='small'\n        />\n      </>\n      <Box\n      component=\"form\"\n        sx={{\n          display: \"flex\",\n          flexDirection: \"column\",\n          alignItems: \"center\",\n          \"& > *\": {\n            m: 1,\n          },\n        }}\n      >\n        <ButtonGroup color='secondary'>\n          <SimpleButton text='All' onClick={statusHandler} />\n          <SimpleButton text='Active' onClick={statusHandler} />\n          <SimpleButton text='Completed' onClick={statusHandler} />\n        </ButtonGroup>\n      </Box>\n    </div>\n  );\n};\n\nexport default TodoElement;\n"]},"metadata":{},"sourceType":"module"}