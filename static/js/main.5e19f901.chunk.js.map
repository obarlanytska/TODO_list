{"version":3,"sources":["components/SimpleButton.js","components/Input.js","App.js","reportWebVitals.js","index.js"],"names":["SimpleButton","text","onClick","Button","prototypes","PropTypes","string","func","Input","useState","inputText","setInputText","tasks","setTasks","status","setStatus","filteredTasks","setFilteredTasks","useEffect","getLocalTasks","filter","task","completed","filteredHandler","savetoLocalStorage","statusHandler","e","target","innerText","toLowerCase","localStorage","setItem","JSON","stringify","getItem","itemList","parse","Box","TextField","autoFocus","fullWidth","placeholder","onChange","value","length","id","uuidv4","color","List","map","i","ListItem","key","className","ListItemText","IconButton","item","completeHandler","deleteHandler","type","inputProps","readOnly","size","component","sx","display","flexDirection","alignItems","m","ButtonGroup","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5e19f901.chunk.js","sourcesContent":["import PropTypes from \"prop-types\";\nimport React from \"react\";\n\nimport Button from \"@mui/material/Button\";\n\n\nexport const SimpleButton = ({ text, onClick }) => {\n  return (\n    <Button onClick={onClick}>\n      {text}\n    </Button>\n  );\n};\n\nSimpleButton.prototypes = {\n  text: PropTypes.string,\n  onClick: PropTypes.func,\n};\n","import React, { useState, useEffect } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { SimpleButton } from \"./SimpleButton\";\n\nimport {\n  Box,\n  List,\n  IconButton,\n  TextField,\n  ListItem,\n  ListItemText,\n  ButtonGroup,\n} from \"@mui/material\";\nimport CheckIcon from \"@mui/icons-material/Check\";\nimport DeleteIcon from \"@mui/icons-material/Delete\";\n\nimport \"../index.css\";\n\nconst Input = () => {\n  const [inputText, setInputText] = useState(\"\");\n  const [tasks, setTasks] = useState([]);\n  const [status, setStatus] = useState(\"all\");\n  const [filteredTasks, setFilteredTasks] = useState([]);\n\n  const filteredHandler = () => {\n    switch (status) {\n      case \"completed\":\n        setFilteredTasks(tasks.filter((task) => task.completed === true));\n        break;\n      case \"active\":\n        setFilteredTasks(tasks.filter((task) => task.completed === false));\n        break;\n      default:\n        setFilteredTasks(tasks);\n        break;\n    }\n  };\n  useEffect(() => {\n    getLocalTasks();\n  }, []);\n\n  useEffect(() => {\n    filteredHandler();\n    savetoLocalStorage();\n  }, [tasks, status]);\n\n  const submitValue = () => {\n    if (inputText.length > 0) {\n      setTasks([...tasks, { text: inputText, completed: false, id: uuidv4() }]);\n      setInputText(\"\");\n    }\n  };\n\n  const deleteHandler = (i) => {\n    setTasks(tasks.filter((item) => item.id !== i.id));\n  };\n\n  const completeHandler = (i) => {\n    setTasks(\n      tasks.map((item) =>\n        item.id === i.id ? { ...item, completed: !item.completed } : item\n      )\n    );\n  };\n\n  const statusHandler = (e) => {\n    setStatus(e.target.innerText.toLowerCase());\n  };\n\n  const savetoLocalStorage = () => {\n    localStorage.setItem(\"tasks\", JSON.stringify(tasks));\n  };\n\n  const getLocalTasks = () => {\n    if (localStorage.getItem(\"tasks\") === null) {\n      localStorage.setItem(\"tasks\", JSON.stringify([]));\n    } else {\n      let itemList = JSON.parse(localStorage.getItem(\"tasks\"));\n      setTasks(itemList);\n    }\n  };\n\n  return (\n    <div>\n      <Box>\n        <TextField\n          autoFocus\n          fullWidth\n          placeholder='Put your task here'\n          onChange={(e) => setInputText(e.target.value)}\n          value={inputText}\n          onClick={submitValue}\n          color='secondary'\n        />\n      </Box>\n      <Box>\n        <List>\n          {filteredTasks.map((i) => (\n            <ListItem\n              key={i.id}\n              className={`list-item${i.completed ? \"-completed\" : \"\"}`}\n            >\n              <ListItemText>{i.text}</ListItemText>\n              <IconButton onClick={() => completeHandler(i)}>\n                <CheckIcon />\n              </IconButton>\n              <IconButton onClick={() => deleteHandler(i)}>\n                <DeleteIcon />\n              </IconButton>\n            </ListItem>\n          ))}\n        </List>\n      </Box>\n      <>\n        <TextField\n          type='number'\n          value={filteredTasks.length}\n          inputProps={{ readOnly: true }}\n          color='secondary'\n          size='small'\n        />\n      </>\n      <Box\n      component=\"form\"\n        sx={{\n          display: \"flex\",\n          flexDirection: \"column\",\n          alignItems: \"center\",\n          \"& > *\": {\n            m: 1,\n          },\n        }}\n      >\n        <ButtonGroup color='secondary'>\n          <SimpleButton text='All' onClick={statusHandler} />\n          <SimpleButton text='Active' onClick={statusHandler} />\n          <SimpleButton text='Completed' onClick={statusHandler} />\n        </ButtonGroup>\n      </Box>\n    </div>\n  );\n};\n\nexport default Input;\n","import  Input  from \"./components/Input\";\nimport React from \"react\";\n\n\nfunction App() {\n  return (\n    <div className='container'>\n      <Input />\n    </div>\n  );\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}